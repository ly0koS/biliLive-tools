name: build and push docker

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build:
    if: github.event_name == 'push'
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        service: [frontend, backend, backend-nvidia]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v6
        with:
          file: ./docker/${{ matrix.service }}-dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/bililive-tools-${{ matrix.service }}:latest
            ${{ secrets.DOCKER_USERNAME }}/bililive-tools-${{ matrix.service }}:${{ github.ref_name }}

  manual-build:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend, backend-nvidia]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v6
        with:
          file: ./docker/${{ matrix.service }}-dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bililive-tools-${{ matrix.service }}:test
